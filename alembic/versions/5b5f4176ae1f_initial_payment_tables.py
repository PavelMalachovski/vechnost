"""Initial payment tables

Revision ID: 5b5f4176ae1f
Revises: 
Create Date: 2025-10-12 21:27:21.614980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5b5f4176ae1f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('stars_amount', sa.Integer(), nullable=True),
    sa.Column('t_link', sa.String(), nullable=True),
    sa.Column('web_link', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_user_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_telegram_user_id', ['telegram_user_id'], unique=False)

    op.create_table('webhook_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('body_sha256', sa.String(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('body_sha256')
    )
    with op.batch_alter_table('webhook_events', schema=None) as batch_op:
        batch_op.create_index('idx_body_sha256_webhook', ['body_sha256'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('event_name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('telegram_user_id', sa.BigInteger(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('raw_body', vechnost_bot.payments.models.JSONEncodedDict(), nullable=False),
    sa.Column('signature', sa.String(), nullable=False),
    sa.Column('body_sha256', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('body_sha256')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index('idx_body_sha256', ['body_sha256'], unique=False)
        batch_op.create_index('idx_telegram_user_id_payments', ['telegram_user_id'], unique=False)

    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_event_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'subscription_id', name='uq_user_subscription')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index('idx_telegram_user_id_payments')
        batch_op.drop_index('idx_body_sha256')

    op.drop_table('payments')
    with op.batch_alter_table('webhook_events', schema=None) as batch_op:
        batch_op.drop_index('idx_body_sha256_webhook')

    op.drop_table('webhook_events')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_telegram_user_id')

    op.drop_table('users')
    op.drop_table('products')
    # ### end Alembic commands ###
